|| -> [||]
<= -> [<=]
iteration_stmt -> [while, for, do]
INT10 -> [INT10]
case_stmt -> [case]
item' -> [*, /, %]
do -> [do]
float -> [float]
while -> [while]
type -> [int, short, long, char, float, double, void, unsigned]
isnull_es -> [,]
STR -> [STR]
IDN -> [IDN]
block_stmt -> [{]
continue -> [continue]
else -> [else]
define_stmts -> [int, short, long, char, float, double, void, unsigned]
logical_expression -> [!, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
block -> [{]
vars -> [,]
if -> [if]
INT16 -> [INT16]
case -> [case]
assign_stmt -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
== -> [==]
! -> [!]
init -> [=, []
stmts -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
item -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
void -> [void]
branch_stmt -> [if, switch]
case_stmts -> [case]
% -> [%]
call_func -> [(]
double -> [double]
( -> [(]
) -> [)]
* -> [*]
+ -> [+]
, -> [,]
- -> [-]
es -> [,, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
/ -> [/]
-= -> [-=]
isnull_expr -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
value' -> [+, -]
%= -> [%=]
: -> [:]
; -> [;]
default_stmt -> [default]
< -> [<]
!= -> [!=]
= -> [=]
> -> [>]
>= -> [>=]
&& -> [&&]
FLOAT -> [FLOAT]
const -> [FLOAT, CHAR, STR, INT10, INT8, INT16]
for -> [for]
CHAR -> [CHAR]
bool_expression -> [&&, ||]
lop -> [&&, ||]
long -> [long]
func_body -> [;, {]
switch -> [switch]
result -> [else]
default -> [default]
*= -> [*=]
S -> [int, short, long, char, float, double, void, unsigned]
compare_op -> [>, >=, <, <=, ==, !=]
arg -> [,]
[ -> [[]
factor -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
] -> []]
value -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
expression -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
break -> [break]
define_stmt -> [int, short, long, char, float, double, void, unsigned]
INT8 -> [INT8]
equal_op -> [=, +=, -=, *=, /=, %=]
int -> [int]
/= -> [/=]
jump_stmt -> [continue, break, return]
args -> [int, short, long, char, float, double, void, unsigned]
+= -> [+=]
func -> [int, short, long, char, float, double, void, unsigned]
num_const -> [INT10, INT8, INT16]
char -> [char]
short -> [short]
unsigned -> [unsigned]
{ -> [{]
funcs -> [int, short, long, char, float, double, void, unsigned]
} -> [}]
operation -> [>, >=, <, <=, ==, !=, =, +=, -=, *=, /=, %=]
return -> [return]
stmt -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
|| -> [||]
<= -> [<=]
iteration_stmt -> [while, for, do]
INT10 -> [INT10]
case_stmt -> [case]
item' -> [*, /, %]
do -> [do]
float -> [float]
while -> [while]
type -> [int, short, long, char, float, double, void, unsigned]
isnull_es -> [,]
STR -> [STR]
IDN -> [IDN]
block_stmt -> [{]
continue -> [continue]
else -> [else]
define_stmts -> [int, short, long, char, float, double, void, unsigned]
logical_expression -> [!, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
block -> [{]
vars -> [,]
if -> [if]
INT16 -> [INT16]
case -> [case]
assign_stmt -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
== -> [==]
! -> [!]
init -> [=, []
stmts -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
item -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
void -> [void]
branch_stmt -> [if, switch]
case_stmts -> [case]
% -> [%]
call_func -> [(]
double -> [double]
( -> [(]
) -> [)]
* -> [*]
+ -> [+]
, -> [,]
- -> [-]
es -> [,, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
/ -> [/]
-= -> [-=]
isnull_expr -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
value' -> [+, -]
%= -> [%=]
: -> [:]
; -> [;]
default_stmt -> [default]
< -> [<]
!= -> [!=]
= -> [=]
> -> [>]
>= -> [>=]
&& -> [&&]
FLOAT -> [FLOAT]
const -> [FLOAT, CHAR, STR, INT10, INT8, INT16]
for -> [for]
CHAR -> [CHAR]
bool_expression -> [&&, ||]
lop -> [&&, ||]
long -> [long]
func_body -> [;, {]
switch -> [switch]
result -> [else]
default -> [default]
*= -> [*=]
S -> [int, short, long, char, float, double, void, unsigned]
compare_op -> [>, >=, <, <=, ==, !=]
arg -> [,]
[ -> [[]
factor -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
] -> []]
value -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
expression -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
break -> [break]
define_stmt -> [int, short, long, char, float, double, void, unsigned]
INT8 -> [INT8]
equal_op -> [=, +=, -=, *=, /=, %=]
int -> [int]
/= -> [/=]
jump_stmt -> [continue, break, return]
args -> [int, short, long, char, float, double, void, unsigned]
+= -> [+=]
func -> [int, short, long, char, float, double, void, unsigned]
num_const -> [INT10, INT8, INT16]
char -> [char]
short -> [short]
unsigned -> [unsigned]
{ -> [{]
funcs -> [int, short, long, char, float, double, void, unsigned]
} -> [}]
operation -> [>, >=, <, <=, ==, !=, =, +=, -=, *=, /=, %=]
return -> [return]
stmt -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
|| -> [||]
<= -> [<=]
iteration_stmt -> [while, for, do]
INT10 -> [INT10]
case_stmt -> [case]
item' -> [*, /, %]
do -> [do]
float -> [float]
while -> [while]
type -> [int, short, long, char, float, double, void, unsigned]
isnull_es -> [,]
STR -> [STR]
IDN -> [IDN]
block_stmt -> [{]
continue -> [continue]
else -> [else]
define_stmts -> [int, short, long, char, float, double, void, unsigned]
logical_expression -> [!, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
block -> [{]
vars -> [,]
if -> [if]
INT16 -> [INT16]
case -> [case]
assign_stmt -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
== -> [==]
! -> [!]
init -> [=, []
stmts -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
item -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
void -> [void]
branch_stmt -> [if, switch]
case_stmts -> [case]
% -> [%]
call_func -> [(]
double -> [double]
( -> [(]
) -> [)]
* -> [*]
+ -> [+]
, -> [,]
- -> [-]
es -> [,, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
/ -> [/]
-= -> [-=]
isnull_expr -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
value' -> [+, -]
%= -> [%=]
: -> [:]
; -> [;]
default_stmt -> [default]
< -> [<]
!= -> [!=]
= -> [=]
> -> [>]
>= -> [>=]
&& -> [&&]
FLOAT -> [FLOAT]
const -> [FLOAT, CHAR, STR, INT10, INT8, INT16]
for -> [for]
CHAR -> [CHAR]
bool_expression -> [&&, ||]
lop -> [&&, ||]
long -> [long]
func_body -> [;, {]
switch -> [switch]
result -> [else]
default -> [default]
*= -> [*=]
S -> [int, short, long, char, float, double, void, unsigned]
compare_op -> [>, >=, <, <=, ==, !=]
arg -> [,]
[ -> [[]
factor -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
] -> []]
value -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
expression -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
break -> [break]
define_stmt -> [int, short, long, char, float, double, void, unsigned]
INT8 -> [INT8]
equal_op -> [=, +=, -=, *=, /=, %=]
int -> [int]
/= -> [/=]
jump_stmt -> [continue, break, return]
args -> [int, short, long, char, float, double, void, unsigned]
+= -> [+=]
func -> [int, short, long, char, float, double, void, unsigned]
num_const -> [INT10, INT8, INT16]
char -> [char]
short -> [short]
unsigned -> [unsigned]
{ -> [{]
funcs -> [int, short, long, char, float, double, void, unsigned]
} -> [}]
operation -> [>, >=, <, <=, ==, !=, =, +=, -=, *=, /=, %=]
return -> [return]
stmt -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
|| -> [||]
<= -> [<=]
iteration_stmt -> [while, for, do]
INT10 -> [INT10]
case_stmt -> [case]
item' -> [*, /, %]
do -> [do]
float -> [float]
while -> [while]
type -> [int, short, long, char, float, double, void, unsigned]
isnull_es -> [,]
STR -> [STR]
IDN -> [IDN]
block_stmt -> [{]
continue -> [continue]
else -> [else]
define_stmts -> [int, short, long, char, float, double, void, unsigned]
logical_expression -> [!, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
block -> [{]
vars -> [,]
if -> [if]
INT16 -> [INT16]
case -> [case]
assign_stmt -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
== -> [==]
! -> [!]
init -> [=, []
stmts -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
item -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
void -> [void]
branch_stmt -> [if, switch]
case_stmts -> [case]
% -> [%]
call_func -> [(]
double -> [double]
( -> [(]
) -> [)]
* -> [*]
+ -> [+]
, -> [,]
- -> [-]
es -> [,, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
/ -> [/]
-= -> [-=]
isnull_expr -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
value' -> [+, -]
%= -> [%=]
: -> [:]
; -> [;]
default_stmt -> [default]
< -> [<]
!= -> [!=]
= -> [=]
> -> [>]
>= -> [>=]
&& -> [&&]
FLOAT -> [FLOAT]
const -> [FLOAT, CHAR, STR, INT10, INT8, INT16]
for -> [for]
CHAR -> [CHAR]
bool_expression -> [&&, ||]
lop -> [&&, ||]
long -> [long]
func_body -> [;, {]
switch -> [switch]
result -> [else]
default -> [default]
*= -> [*=]
S -> [int, short, long, char, float, double, void, unsigned]
compare_op -> [>, >=, <, <=, ==, !=]
arg -> [,]
[ -> [[]
factor -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
] -> []]
value -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
expression -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
break -> [break]
define_stmt -> [int, short, long, char, float, double, void, unsigned]
INT8 -> [INT8]
equal_op -> [=, +=, -=, *=, /=, %=]
int -> [int]
/= -> [/=]
jump_stmt -> [continue, break, return]
args -> [int, short, long, char, float, double, void, unsigned]
+= -> [+=]
func -> [int, short, long, char, float, double, void, unsigned]
num_const -> [INT10, INT8, INT16]
char -> [char]
short -> [short]
unsigned -> [unsigned]
{ -> [{]
funcs -> [int, short, long, char, float, double, void, unsigned]
} -> [}]
operation -> [>, >=, <, <=, ==, !=, =, +=, -=, *=, /=, %=]
return -> [return]
stmt -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
|| -> [||]
<= -> [<=]
iteration_stmt -> [while, for, do]
INT10 -> [INT10]
case_stmt -> [case]
item' -> [*, /, %]
do -> [do]
float -> [float]
while -> [while]
type -> [int, short, long, char, float, double, void, unsigned]
isnull_es -> [,]
STR -> [STR]
IDN -> [IDN]
block_stmt -> [{]
continue -> [continue]
else -> [else]
define_stmts -> [int, short, long, char, float, double, void, unsigned]
logical_expression -> [!, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
block -> [{]
vars -> [,]
if -> [if]
INT16 -> [INT16]
case -> [case]
assign_stmt -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
== -> [==]
! -> [!]
init -> [=, []
stmts -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
item -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
void -> [void]
branch_stmt -> [if, switch]
case_stmts -> [case]
% -> [%]
call_func -> [(]
double -> [double]
( -> [(]
) -> [)]
* -> [*]
+ -> [+]
, -> [,]
- -> [-]
es -> [,, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
/ -> [/]
-= -> [-=]
isnull_expr -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
value' -> [+, -]
%= -> [%=]
: -> [:]
; -> [;]
default_stmt -> [default]
< -> [<]
!= -> [!=]
= -> [=]
> -> [>]
>= -> [>=]
&& -> [&&]
FLOAT -> [FLOAT]
const -> [FLOAT, CHAR, STR, INT10, INT8, INT16]
for -> [for]
CHAR -> [CHAR]
bool_expression -> [&&, ||]
lop -> [&&, ||]
long -> [long]
func_body -> [;, {]
switch -> [switch]
result -> [else]
default -> [default]
*= -> [*=]
S -> [int, short, long, char, float, double, void, unsigned]
compare_op -> [>, >=, <, <=, ==, !=]
arg -> [,]
[ -> [[]
factor -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
] -> []]
value -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
expression -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
break -> [break]
define_stmt -> [int, short, long, char, float, double, void, unsigned]
INT8 -> [INT8]
equal_op -> [=, +=, -=, *=, /=, %=]
int -> [int]
/= -> [/=]
jump_stmt -> [continue, break, return]
args -> [int, short, long, char, float, double, void, unsigned]
+= -> [+=]
func -> [int, short, long, char, float, double, void, unsigned]
num_const -> [INT10, INT8, INT16]
char -> [char]
short -> [short]
unsigned -> [unsigned]
{ -> [{]
funcs -> [int, short, long, char, float, double, void, unsigned]
} -> [}]
operation -> [>, >=, <, <=, ==, !=, =, +=, -=, *=, /=, %=]
return -> [return]
stmt -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
|| -> [||]
<= -> [<=]
iteration_stmt -> [while, for, do]
INT10 -> [INT10]
case_stmt -> [case]
item' -> [*, /, %]
do -> [do]
float -> [float]
while -> [while]
type -> [int, short, long, char, float, double, void, unsigned]
isnull_es -> [,]
STR -> [STR]
IDN -> [IDN]
block_stmt -> [{]
continue -> [continue]
else -> [else]
define_stmts -> [int, short, long, char, float, double, void, unsigned]
logical_expression -> [!, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
block -> [{]
vars -> [,]
if -> [if]
INT16 -> [INT16]
case -> [case]
assign_stmt -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
== -> [==]
! -> [!]
init -> [=, []
stmts -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
item -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
void -> [void]
branch_stmt -> [if, switch]
case_stmts -> [case]
% -> [%]
call_func -> [(]
double -> [double]
( -> [(]
) -> [)]
* -> [*]
+ -> [+]
, -> [,]
- -> [-]
es -> [,, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
/ -> [/]
-= -> [-=]
isnull_expr -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
value' -> [+, -]
%= -> [%=]
: -> [:]
; -> [;]
default_stmt -> [default]
< -> [<]
!= -> [!=]
= -> [=]
> -> [>]
>= -> [>=]
&& -> [&&]
FLOAT -> [FLOAT]
const -> [FLOAT, CHAR, STR, INT10, INT8, INT16]
for -> [for]
CHAR -> [CHAR]
bool_expression -> [&&, ||]
lop -> [&&, ||]
long -> [long]
func_body -> [;, {]
switch -> [switch]
result -> [else]
default -> [default]
*= -> [*=]
S -> [int, short, long, char, float, double, void, unsigned]
compare_op -> [>, >=, <, <=, ==, !=]
arg -> [,]
[ -> [[]
factor -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
] -> []]
value -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
expression -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
break -> [break]
define_stmt -> [int, short, long, char, float, double, void, unsigned]
INT8 -> [INT8]
equal_op -> [=, +=, -=, *=, /=, %=]
int -> [int]
/= -> [/=]
jump_stmt -> [continue, break, return]
args -> [int, short, long, char, float, double, void, unsigned]
+= -> [+=]
func -> [int, short, long, char, float, double, void, unsigned]
num_const -> [INT10, INT8, INT16]
char -> [char]
short -> [short]
unsigned -> [unsigned]
{ -> [{]
funcs -> [int, short, long, char, float, double, void, unsigned]
} -> [}]
operation -> [>, >=, <, <=, ==, !=, =, +=, -=, *=, /=, %=]
return -> [return]
stmt -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
|| -> [||]
<= -> [<=]
iteration_stmt -> [while, for, do]
INT10 -> [INT10]
case_stmt -> [case]
item' -> [*, /, %]
do -> [do]
float -> [float]
while -> [while]
type -> [int, short, long, char, float, double, void, unsigned]
isnull_es -> [,]
STR -> [STR]
IDN -> [IDN]
block_stmt -> [{]
continue -> [continue]
else -> [else]
define_stmts -> [int, short, long, char, float, double, void, unsigned]
logical_expression -> [!, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
block -> [{]
vars -> [,]
if -> [if]
INT16 -> [INT16]
case -> [case]
assign_stmt -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
== -> [==]
! -> [!]
init -> [=, []
stmts -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
item -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
void -> [void]
branch_stmt -> [if, switch]
case_stmts -> [case]
% -> [%]
call_func -> [(]
double -> [double]
( -> [(]
) -> [)]
* -> [*]
+ -> [+]
, -> [,]
- -> [-]
es -> [,, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
/ -> [/]
-= -> [-=]
isnull_expr -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
value' -> [+, -]
%= -> [%=]
: -> [:]
; -> [;]
default_stmt -> [default]
< -> [<]
!= -> [!=]
= -> [=]
> -> [>]
>= -> [>=]
&& -> [&&]
FLOAT -> [FLOAT]
const -> [FLOAT, CHAR, STR, INT10, INT8, INT16]
for -> [for]
CHAR -> [CHAR]
bool_expression -> [&&, ||]
lop -> [&&, ||]
long -> [long]
func_body -> [;, {]
switch -> [switch]
result -> [else]
default -> [default]
*= -> [*=]
S -> [int, short, long, char, float, double, void, unsigned]
compare_op -> [>, >=, <, <=, ==, !=]
arg -> [,]
[ -> [[]
factor -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
] -> []]
value -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
expression -> [(, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
break -> [break]
define_stmt -> [int, short, long, char, float, double, void, unsigned]
INT8 -> [INT8]
equal_op -> [=, +=, -=, *=, /=, %=]
int -> [int]
/= -> [/=]
jump_stmt -> [continue, break, return]
args -> [int, short, long, char, float, double, void, unsigned]
+= -> [+=]
func -> [int, short, long, char, float, double, void, unsigned]
num_const -> [INT10, INT8, INT16]
char -> [char]
short -> [short]
unsigned -> [unsigned]
{ -> [{]
funcs -> [int, short, long, char, float, double, void, unsigned]
} -> [}]
operation -> [>, >=, <, <=, ==, !=, =, +=, -=, *=, /=, %=]
return -> [return]
stmt -> [continue, break, return, while, for, do, if, switch, (, IDN, FLOAT, CHAR, STR, INT10, INT8, INT16]
